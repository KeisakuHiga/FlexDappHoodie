{
  "contractName": "IAllocationStrategy",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "investAmount",
          "type": "uint256"
        }
      ],
      "name": "investUnderlying",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investAmount\",\"type\":\"uint256\"}],\"name\":\"investUnderlying\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"accrueInterest()\":{\"details\":\"This should calculates interest accrued from the last checkpointed     block up to the current block and writes new checkpoint to storage.\",\"return\":\"bool success(true) or failure(false)\"},\"exchangeRateStored()\":{\"return\":\"uint256 Calculated exchange rate scaled by 1e18\"},\"investUnderlying(uint256)\":{\"details\":\"Interst shall be accrued\",\"params\":{\"investAmount\":\"The amount of the underlying asset to supply\"},\"return\":\"uint256 Amount of saving assets created\"},\"redeemUnderlying(uint256)\":{\"details\":\"Interst shall be accrued\",\"params\":{\"redeemAmount\":\"The amount of underlying to redeem\"},\"return\":\"uint256 Amount of saving assets burned\"},\"underlying()\":{\"return\":\"address Underlying asset address\"}}},\"userdoc\":{\"methods\":{\"accrueInterest()\":{\"notice\":\"Applies accrued interest to all savings\"},\"exchangeRateStored()\":{\"notice\":\"Calculates the exchange rate from the underlying to the saving assets\"},\"investUnderlying(uint256)\":{\"notice\":\"Sender supplies underlying assets into the market and receives saving assets in exchange\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Sender redeems saving assets in exchange for a specified amount of underlying asset\"},\"underlying()\":{\"notice\":\"Underlying asset for the strategy\"}},\"notice\":\"Allocation strategy for assets.        - It invests the underlying assets into some yield generating contracts,          usually lending contracts, in return it gets new assets aka. saving assets.        - Sainv assets can be redeemed back to the underlying assets plus interest any time.\"}},\"settings\":{\"compilationTarget\":{\"/Users/khiga619/Sites/FlexDappHoodie/contracts/IAllocationStrategy.sol\":\"IAllocationStrategy\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/khiga619/Sites/FlexDappHoodie/contracts/IAllocationStrategy.sol\":{\"keccak256\":\"0x988f8199fc9a1d533ef4244c2e1339ea3200618791f79e7d40959161719b6c9b\",\"urls\":[\"bzzr://c8c69393afc53919939e89657ff195ff952d5ac4d1388dbd18b745e56eee46ec\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.8;\n\n/**\n * @notice Allocation strategy for assets.\n *         - It invests the underlying assets into some yield generating contracts,\n *           usually lending contracts, in return it gets new assets aka. saving assets.\n *         - Sainv assets can be redeemed back to the underlying assets plus interest any time.\n */\ninterface IAllocationStrategy {\n\n    /**\n     * @notice Underlying asset for the strategy\n     * @return address Underlying asset address\n     */\n    function underlying() external view returns (address);\n\n    /**\n     * @notice Calculates the exchange rate from the underlying to the saving assets\n     * @return uint256 Calculated exchange rate scaled by 1e18\n     */\n    function exchangeRateStored() external view returns (uint256);\n\n    /**\n      * @notice Applies accrued interest to all savings\n      * @dev This should calculates interest accrued from the last checkpointed\n      *      block up to the current block and writes new checkpoint to storage.\n      * @return bool success(true) or failure(false)\n      */\n    function accrueInterest() external returns (bool);\n\n    /**\n     * @notice Sender supplies underlying assets into the market and receives saving assets in exchange\n     * @dev Interst shall be accrued\n     * @param investAmount The amount of the underlying asset to supply\n     * @return uint256 Amount of saving assets created\n     */\n    function investUnderlying(uint256 investAmount) external returns (uint256);\n\n    /**\n     * @notice Sender redeems saving assets in exchange for a specified amount of underlying asset\n     * @dev Interst shall be accrued\n     * @param redeemAmount The amount of underlying to redeem\n     * @return uint256 Amount of saving assets burned\n     */\n    function redeemUnderlying(uint256 redeemAmount) external returns (uint256);\n\n}",
  "sourcePath": "/Users/khiga619/Sites/FlexDappHoodie/contracts/IAllocationStrategy.sol",
  "ast": {
    "absolutePath": "/Users/khiga619/Sites/FlexDappHoodie/contracts/IAllocationStrategy.sol",
    "exportedSymbols": {
      "IAllocationStrategy": [
        833
      ]
    },
    "id": 834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 803,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice Allocation strategy for assets.\n        - It invests the underlying assets into some yield generating contracts,\n          usually lending contracts, in return it gets new assets aka. saving assets.\n        - Sainv assets can be redeemed back to the underlying assets plus interest any time.",
        "fullyImplemented": false,
        "id": 833,
        "linearizedBaseContracts": [
          833
        ],
        "name": "IAllocationStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Underlying asset for the strategy\n@return address Underlying asset address",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:1"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "540:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:9:1"
            },
            "scope": 833,
            "src": "495:54:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Calculates the exchange rate from the underlying to the saving assets\n@return uint256 Calculated exchange rate scaled by 1e18",
            "id": 813,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeRateStored",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:2:1"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "772:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:9:1"
            },
            "scope": 833,
            "src": "719:62:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Applies accrued interest to all savings\n@dev This should calculates interest accrued from the last checkpointed\n     block up to the current block and writes new checkpoint to storage.\n@return bool success(true) or failure(false)",
            "id": 818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "accrueInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:1"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "1118:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:6:1"
            },
            "scope": 833,
            "src": "1074:50:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sender supplies underlying assets into the market and receives saving assets in exchange\n@dev Interst shall be accrued\n@param investAmount The amount of the underlying asset to supply\n@return uint256 Amount of saving assets created",
            "id": 825,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "investUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "1440:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:22:1"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "1480:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1479:9:1"
            },
            "scope": 833,
            "src": "1414:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sender redeems saving assets in exchange for a specified amount of underlying asset\n@dev Interst shall be accrued\n@param redeemAmount The amount of underlying to redeem\n@return uint256 Amount of saving assets burned",
            "id": 832,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1789:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1788:22:1"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1829:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1828:9:1"
            },
            "scope": 833,
            "src": "1763:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 834,
        "src": "345:1496:1"
      }
    ],
    "src": "0:1841:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/khiga619/Sites/FlexDappHoodie/contracts/IAllocationStrategy.sol",
    "exportedSymbols": {
      "IAllocationStrategy": [
        833
      ]
    },
    "id": 834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 803,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice Allocation strategy for assets.\n        - It invests the underlying assets into some yield generating contracts,\n          usually lending contracts, in return it gets new assets aka. saving assets.\n        - Sainv assets can be redeemed back to the underlying assets plus interest any time.",
        "fullyImplemented": false,
        "id": 833,
        "linearizedBaseContracts": [
          833
        ],
        "name": "IAllocationStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Underlying asset for the strategy\n@return address Underlying asset address",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:1"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "540:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:9:1"
            },
            "scope": 833,
            "src": "495:54:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Calculates the exchange rate from the underlying to the saving assets\n@return uint256 Calculated exchange rate scaled by 1e18",
            "id": 813,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeRateStored",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:2:1"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "772:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:9:1"
            },
            "scope": 833,
            "src": "719:62:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Applies accrued interest to all savings\n@dev This should calculates interest accrued from the last checkpointed\n     block up to the current block and writes new checkpoint to storage.\n@return bool success(true) or failure(false)",
            "id": 818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "accrueInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:1"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "1118:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:6:1"
            },
            "scope": 833,
            "src": "1074:50:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sender supplies underlying assets into the market and receives saving assets in exchange\n@dev Interst shall be accrued\n@param investAmount The amount of the underlying asset to supply\n@return uint256 Amount of saving assets created",
            "id": 825,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "investUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "1440:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:22:1"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "1480:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1479:9:1"
            },
            "scope": 833,
            "src": "1414:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sender redeems saving assets in exchange for a specified amount of underlying asset\n@dev Interst shall be accrued\n@param redeemAmount The amount of underlying to redeem\n@return uint256 Amount of saving assets burned",
            "id": 832,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1789:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1788:22:1"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1829:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1828:9:1"
            },
            "scope": 833,
            "src": "1763:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 834,
        "src": "345:1496:1"
      }
    ],
    "src": "0:1841:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-23T09:07:42.800Z",
  "devdoc": {
    "methods": {
      "accrueInterest()": {
        "details": "This should calculates interest accrued from the last checkpointed     block up to the current block and writes new checkpoint to storage.",
        "return": "bool success(true) or failure(false)"
      },
      "exchangeRateStored()": {
        "return": "uint256 Calculated exchange rate scaled by 1e18"
      },
      "investUnderlying(uint256)": {
        "details": "Interst shall be accrued",
        "params": {
          "investAmount": "The amount of the underlying asset to supply"
        },
        "return": "uint256 Amount of saving assets created"
      },
      "redeemUnderlying(uint256)": {
        "details": "Interst shall be accrued",
        "params": {
          "redeemAmount": "The amount of underlying to redeem"
        },
        "return": "uint256 Amount of saving assets burned"
      },
      "underlying()": {
        "return": "address Underlying asset address"
      }
    }
  },
  "userdoc": {
    "methods": {
      "accrueInterest()": {
        "notice": "Applies accrued interest to all savings"
      },
      "exchangeRateStored()": {
        "notice": "Calculates the exchange rate from the underlying to the saving assets"
      },
      "investUnderlying(uint256)": {
        "notice": "Sender supplies underlying assets into the market and receives saving assets in exchange"
      },
      "redeemUnderlying(uint256)": {
        "notice": "Sender redeems saving assets in exchange for a specified amount of underlying asset"
      },
      "underlying()": {
        "notice": "Underlying asset for the strategy"
      }
    },
    "notice": "Allocation strategy for assets.        - It invests the underlying assets into some yield generating contracts,          usually lending contracts, in return it gets new assets aka. saving assets.        - Sainv assets can be redeemed back to the underlying assets plus interest any time."
  }
}